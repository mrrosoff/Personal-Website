name: Build and Deploy to AWS

on:
    push:
        branches:
            - master

permissions:
    id-token: write
    contents: read
    
jobs:
    build-and-deploy:
        name: Build And Deploy
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4

            - name: Setup node
              uses: actions/setup-node@v4
              with:
                  node-version-file: ".nvmrc"

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  role-to-assume: ${{ secrets.AWS_ACCESS_ROLE }}
                  aws-region: ${{ secrets.AWS_REGION }}

            - name: Cache Node Modules
              uses: actions/cache@v4
              id: cache
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Install Node Modules
              run: npm install

            - name: Create Website .env File
              uses: iamsauravsharma/create-dotenv@v2.0.1
              with:
                  input-prefix: "WEBSITE_" # Needed To Prevent GitHub Variables From Propagating To Lambda
                  file-path: ".env"
              env:
                  WEBSITE_RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
                  WEBSITE_RESEND_AUDIENCE_ID: ${{ secrets.RESEND_AUDIENCE_ID }}
                  RESEND_WEBHOOK_SECRET: ${{ secrets.RESEND_WEBHOOK_SECRET }}
                  WEBSITE_NODE_ENV: "production"

            - name: Build
              run: npm run build-cdk

            - name: Bootstrap
              run: npm run bootstrap

            - name: Deploy
              run: npm run deploy

    send-emails:
        name: Send Emails
        needs: build-and-deploy
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4
              with:
                  fetch-depth: 2

            - name: Determine If Email Should Be Sent
              id: check-email
              run: |
                  commit_msg=$(git log -1 --pretty=%B)
                  if [[ $commit_msg == *"no-email"* ]]; then
                      echo "Commit Message Contains no-email Flag"
                      echo "send_email=false" >> $GITHUB_OUTPUT
                  else
                      if git diff --name-only HEAD^ HEAD | grep -q "^src/components/ice-cream/flavors.ts$"; then
                          echo "Flavors File Changed"
                          echo "send_email=true" >> $GITHUB_OUTPUT
                      else
                          echo "No Changes to Flavors File"
                          echo "send_email=false" >> $GITHUB_OUTPUT
                      fi
                  fi

            - name: Send Email
              if: steps.check-email.outputs.send_email == 'true'
              run: curl -X POST https://api.maxrosoff.com/send-email
